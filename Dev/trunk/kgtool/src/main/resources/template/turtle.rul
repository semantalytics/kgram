<?xml version='1.0' encoding='UTF-8'?>
<!--
SPARQL Template Transformation
Olivier Corby - Wimmics - Inria UNS CNRS I3S
Fri May 09 10:45:39 CEST 2014
-->
<rdf:RDF  xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' 
  xmlns='http://ns.inria.fr/edelweiss/2011/rule#'>
<rule>
<body>
<![CDATA[
#
# Turtle Pretty Printer
# Olivier Corby, Wimmics Inria I3S, 2013
#
template st:start {
  st:prolog("@prefix")
  group { 
    st:apply-templates(?x)
    ; separator = "\n\n"
  }
}
where {
  select distinct ?x where { 
    ?x ?p ?y     
    filter ( 
      isURI(?x) 
      || not exists { ?z ?q ?x }
      || (isBlank(?x) 
	  && exists { ?a ?q ?x . ?b ?r ?x . filter(?a != ?b) })
    )
  } order by ?x
}

]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
#
# Turtle Pretty Printer
# Olivier Corby, Wimmics Inria I3S, 2013
#
template st:type {
  "a "
  group {
          ?c           
          ; separator = ", " 
  }
  if (?rest, concat(" ;", st:nl()), "")
}
where {
  ?in rdf:type ?c 
  
    bind(
    exists { ?in ?q ?v . filter (?q != rdf:type) }
    as ?rest)
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
#
# Turtle Pretty Printer
# Olivier Corby, Wimmics Inria I3S, 2013
#
template st:rdf {
  st:apply-templates(?x)
  ; separator = "\n\n"
}
where {
  select distinct ?x where { 
    ?x ?p ?y 
    minus {
       ?x a ?t . 
       filter(
	    strstarts(?t, rdf:)
	 || strstarts(?t, rdfs:)
	 || strstarts(?t, owl:)
       )
    }
    
    filter ( isURI(?x) || not exists { ?z ?q ?x } )
  }
}
order by ?x
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
#
# Turtle Pretty Printer
# Olivier Corby, Wimmics Inria I3S, 2013
#
template st:value {
             
	?p " " 
	
        if (bound(?e), 
	  st:call-template(st:list, ?y), 
	  if (?refer, st:turtle(?y), ?y))
          
        ; separator = concat(" ;", st:nl()) 
        
#        ; separator = " ;\n" 
     
}
where {
  ?in ?p ?y 
  
  filter(?p not in (rdf:type))
  
  bind(isBlank(?y) && exists { ?x ?q ?y . filter(?in != ?x) }
    as ?refer)
    
  optional { ?y  rdf:first ?e }
}
order by ?p ?y
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
#
# Turtle Pretty Printer
# Olivier Corby, Wimmics Inria I3S, 2013
#
template st:list {
  "(" 
    group { ?e } 
  ")"
  
}
where {
  ?x ?p ?in
  ?in rdf:rest*/rdf:first ?e
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
#
# Turtle Pretty Printer
# Olivier Corby, Wimmics Inria I3S, 2013
#
template st:test {
  st:load(rdf:)
  st:load(rdfs:)
  st:call-template(st:start)
}
where {
}

]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
#
# defaut processing of a variable is st:apply-templates 
#
# Olivier Corby, Wimmics Inria I3S, 2014
#
template st:profile(?in) {

    st:define(st:process(?in) = 
      if (isBlank(?in), st:apply-templates(?in), st:turtle(?in)))
      
    st:define(st:default(?in) = st:turtle(?in))
    
}
where {
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
#
# Turtle Pretty Printer
# Olivier Corby, Wimmics Inria I3S, 2013
#
template st:test2 {
  st:load(rdf:)
  st:call-template(st:start)
  st:apply-templates-on(st:table, rdf:)  
}
where {
}

]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
#
# Turtle Pretty Printer
# Olivier Corby, Wimmics Inria I3S, 2013
#
template st:all {
  st:apply-templates(?x)
  ; separator = "\n\n"
}
where {
  select distinct ?x where { 
    ?x ?p ?y 
    filter ( isURI(?x) || not exists { ?z ?q ?x } )
  }
}
order by ?x
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
#
# Turtle Pretty Printer
# Olivier Corby, Wimmics Inria I3S, 2013
#
template st:rdfs {
  st:apply-templates(?x)
  ; separator = "\n\n"
}
where {
  select distinct ?x where { 
    
       ?x a ?t . 
       filter(
	    strstarts(?t, rdf:)
	 || strstarts(?t, rdfs:)
	 || strstarts(?t, owl:)
       )
    
    filter ( isURI(?x) || not exists { ?z ?q ?x } )
  }
}
order by ?x
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
#
# Turtle Pretty Printer
# Olivier Corby, Wimmics Inria I3S, 2013
#
template {
  if (?refer, concat(st:turtle(?in), " "), "[")
  
      ibox {
	st:call-template(st:type, ?in)
	  
	st:call-template(st:value, ?in)
      } 
      
  if (?refer, " .", 
  if (?nested, "]", "] ."))
}
where {
  ?in ?p ?y   
  filter(isBlank(?in))
  
  bind (exists { ?a ?q ?in } as ?nested)
  
  bind (?nested && exists { ?a ?q ?in . ?b ?r ?in filter(?a != ?b) }
  as ?refer)
}
limit 1
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
#
# Turtle Pretty Printer
# Olivier Corby, Wimmics Inria I3S, 2013
#
template {
  ?in " "
      ibox { 
  
	st:call-template(st:type, ?in)
	
	st:call-template(st:value, ?in)
      
      } 
      
      " ."      
}
where {
  ?in ?p ?y   
  filter(isUri(?in))  
}
limit 1
]]>
</body>
</rule>

</rdf:RDF>
